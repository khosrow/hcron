.TH HCRON-SCHEDULER "8" "November 2010" "hcron 0.17" ""
.SH NAME
hcron-scheduler \- Server which schedules and executes hcron events
.SH SYNOPSIS
.B hcron-scheduler

.SH DESCRIPTION
The scheduler loads event definitions set up for the local host and
executes commands accordingly. When run by the root user, event
definitions of those users listed in the hcron.allow file are managed;
otherwise, only the events of the current user are managed. The standard
operation is to run as root.

Certain operational information is logged to a specific log file or to
the syslog service.

.SH METHOD OF OPERATION
.PP
Each minute, hcron-scheduler performs a number of checks in order to
keep up to date:

.IP \[bu] 2
A change in the modification time of the hcron.conf file forces a full
restart of the server.

.IP \[bu] 2
A change in the modification time of the hcron.allow file forces a
reload of the list of allowed users, the event information of
non-existent users is discarded, and the event definitions of new users
is loaded.

.IP \[bu] 2
The hcron spool directory is checked for files. For each file that is
found, the event information of the user name owning the file is
reloaded as appropriate.

.SH HCRON.ALLOW FILE
.PP
The hcron.allow file contains a list of all users for which hcron-scheduler
will load event definitions and schedule. Empty lines and those starting
with # are ignored.

.SH HCRON.CONF FILE
.PP
The hcron.conf file contains configuration settings for hcron-scheduler.
It takes the form of a simplified (simple object types) Python dictionary
with the following keys:

.TP
.B allow_localhost
Boolean indicating whether or not event commands may be done on the
localhost, as specified by the host setting of the event definition.
This restriction applies to any address which resolves to the local
host.

.TP
.B command_spawn_timeout
Maximum time allowed for a command to be spawned. This does not limit
the time allowed for a command to execute, but serves to limit spawned
processes on the hcron machine.

.TP
.B events_base_path
Path below which to search for user event definitions, following the
pattern <events_base_path>/<username>. If undefined or None, user
definitions are loaded from the user's home (~<username>).

.TP
.B log_path
Path of the log file, when use_syslog is False. A relative path is
prepended with /var/log.

.TP
.B max_activated_events
Maximum number of events that can be activated (spawning) at one time.
Chained events count as 1.

.TP
.B max_chain_events
Maximum number of chain events from a single event. The first event counts
as 1.

.TP
.B max_events_per_user
Maximum number of events allowed per user.

.TP
.B names_to_ignore_regexp
Regular expression matching event (and directory) names to ignore when
loading events. The default is to ignore hidden files (starting with .)
and names ending with ~ (commonly used to name backup or temporary
files when editing).

.TP
.B smtp_server
Host name of an SMTP server willing to accept connections. If not
specified, localhost is used.

.TP
.B test_net_delay
Time to wait between retries of the test of the naming service.

.TP
.B test_net_retry
Number of times to retry to determine if the naming service is
available.

.TP
.B test_net_username
A username of a network account (i.e., for which user information is
served by YP/NIS, LDAP, etc.). This is used to test the status of said
service in case a lookup for user information fails which could be
because the service is inaccessible or the user does not exist.

.TP
.B use_syslog
Boolean indicating whether or not to send the logging information to
the syslog daemon.

.PP
As in Python, empty lines and those starting with # are ignored.

.SH HCRON SPOOL DIRECTORY
.PP
The hcron spool directory is accessible to all users within which signal
files can be created using hcron-reload. At the start of each scheduling
period, the signal files are checked. For each signal file, the event
definition files (the snapshot) of its owner are reloaded. Then, the
signal files are removed. The worst case reload wait is just short of
two scheduling periods.

.SH EXAMPLES
.PP
A default hcron.conf configuration:

.RS
.nf
# hcron.conf
{
    "allow_localhost": False,
    "command_spawn_timeout": 15,
    "events_base_path": None,
    "log_path": "hcron.log",
    "max_events_per_user": 25,
    "names_to_ignore_regexp": "(\..*)|(.*~$)",
    "smtp_server": "localhost",
    "use_syslog": False,
}
.fi
.RE

.SH SIGNALS
hcron-scheduler reacts to the following signals by:
.RS
.nf
kill -<signal> `cat /var/run/hcron.pid`
.fi
.RE

.IP SIGHUP
Reload all configuration files and event definitions.

.IP SIGTERM
Terminate.

.SH FILES
.IP /etc/hcron/hcron.allow
See HCRON.ALLOW above.

.IP /etc/hcron/hcron.conf
See HCRON.CONF above.

.IP /var/lib/hcron/event_lists/<username>
See hcron-reload.
 
.IP /var/lib/hcron/trees/<username>
See hcron-reload.
 
.IP /var/log/hcron/hcron.log
Default location of the log file (when use_syslog is False).

.IP /var/run/hcron.pid
Pid file for the currently running hcron-scheduler. This is managed by
hcron-scheduler itself.

.SH SEE ALSO
hcron(7), hcron-event(1), hcron-reload(1)

.SH AUTHOR
Written by John Marshall.

.SH "REPORTING BUGS"
Report bugs to: <http://code.google.com/p/hcron/>.

.SH COPYRIGHT
Copyright \(co 2008-2010 Environment Canada.
.br
This is free software.  You may redistribute copies of it under the terms of
the GNU General Public License <http://www.gnu.org/licenses/gpl.html>.
There is NO WARRANTY, to the extent permitted by law.
